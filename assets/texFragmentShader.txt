#ifdef GL_ES
precision mediump float;
#endif
uniform vec3 u_PointLight;
uniform vec3 u_PointLightPosition;
uniform vec3 u_AmbientLight;
uniform sampler2D u_Sampler;
varying vec2 v_TexCoord;
varying vec3 v_Normal;
varying vec3 v_Position;
varying vec4 v_Color;
void main() {
  vec3 normal = normalize(v_Normal);
  vec3 lightDirection = normalize(u_PointLightPosition - v_Position);
  float nDotL = max(dot(lightDirection, normal), 0.0);
  vec4 texture = texture2D(u_Sampler, v_TexCoord);
  vec3 diffuse = u_PointLight * texture.rgb * nDotL;
  vec3 ambient = u_AmbientLight * texture.rgb;
  gl_FragColor = vec4(diffuse + ambient, texture.a);
}
